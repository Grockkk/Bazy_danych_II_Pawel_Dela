CREATE EXTENSION postgis;

CREATE TABLE buildings (
	id_building INT PRIMARY KEY,
	geometria GEOMETRY,
	nazwa VARCHAR(50),
	wysokosc INT
);

CREATE TABLE roads (
	id_road INT PRIMARY KEY,
	geometria GEOMETRY,
	nazwa VARCHAR (100)
);

CREATE TABLE pktinfo (
	id_pkt INT PRImARY KEY,
	gemetria GEOMETRY,
	nazwa VARCHAR (100),
	liczprac INT
);


-- dane do budynków

INSERT INTO buildings VALUES 
(1,ST_GeomFromText('POLYGON((8 4 , 10.5 4 , 10.5 1.5 , 8 1.5 , 8 4))',0) , 'BuildingA', 40),
(2,ST_GeomFromText('POLYGON((6 5 , 4 5 , 4 7 , 6 7 , 6 5))',0) , 'BuildingB', 60),
(3,ST_GeomFromText('POLYGON((5 8 , 3 8 , 3 6 , 5 6 , 5 8))',0) , 'BuildingC', 100),
(4,ST_GeomFromText('POLYGON((9 9 , 10 9 , 10 8 , 9 8, 9 9))',0) , 'BuildingD', 70),
(5,ST_GeomFromText('POLYGON((2 2 , 1 2 ,  1 1 , 2 1 , 2 2))',0) , 'BuildingF', 90);

-- dane do dr

INSERT INTO roads VALUES
(1, ST_GeomFromText('LINESTRING(0 4.5 , 12 4.5)',0) , 'RoadX'),
(2, ST_GeomFromText('LINESTRING(7.5 10.5 , 7.5 0)',0) , 'RoadY');

-- dane do punktów

INSERT INTO pktinfo VALUES
(1,ST_GeomFromText('POINT(6 9.5)',0) , 'PointK',14),
(2,ST_GeomFromText('POINT(9.5 6)',0) , 'PointI',16),
(3,ST_GeomFromText('POINT(6.5 6)',0) , 'PointJ',31),
(4,ST_GeomFromText('POINT(1 3.5)',0) , 'PointG',7),
(5,ST_GeomFromText('POINT(5.5 1.5)',0) , 'PointH',18);


--Wyznacz całkowitą długość dróg w analizowanym mieście.
SELECT SUM(ST_Length(geometria)) FROM roads;

--Wypisz geometrię (WKT), pole powierzchni oraz obwód poligonu reprezentującego BuildingA.
SELECT ST_AsText(geometria) AS WKT , ST_Area(geometria) AS powiezchnia,ST_Perimeter(geometria) FROM buildings WHERE nazwa = 'BuildingA'


--Wypisz nazwy i pola powierzchni wszystkich poligonów w warstwie budynki. Wyniki posortuj 
--alfabetycznie.

SELECT nazwa,ST_Area(geometria) FROM buildings ORDER BY nazwa

--Wypisz nazwy i obwody 2 budynków o największej powierzchni.

SELECT nazwa,ST_Perimeter(geometria) AS powiezchnia FROM buildings ORDER BY ST_Area(geometria) DESC LIMIT 2

--Wyznacz najkrótszą odległość między budynkiem BuildingC a punktem G.

SELECT ST_Distance(buildings.geometria , pktinfo.gemetria) AS distance 
	FROM buildings,pktinfo 
	WHERE buildings.nazwa = 'BuildingC' 
	AND pktinfo.nazwa = 'PointG';

--Wypisz pole powierzchni tej części budynku BuildingC, która znajduje się w odległości większej 
--niż 0.5 od budynku BuildingB.

SELECT ST_Area(ST_Difference(
	(SELECT buildings.geometria FROM buildings WHERE nazwa = 'BuildingC'),
	ST_Buffer((SELECT buildings.geometria FROM buildings WHERE nazwa = 'BuildingB'),0.5)));

--Wybierz te budynki, których centroid (ST_Centroid) znajduje się powyżej drogi RoadX

SELECT buildings.nazwa 
	FROM buildings, roads
	WHERE ST_Y(ST_Centroid(buildings.geometria)) > ST_Y(ST_Centroid(roads.geometria))
	AND roads.nazwa = 'RoadX'

--Oblicz pole powierzchni tych części budynku BuildingC i poligonu o współrzędnych (4 7, 6 7, 6 8, 
--4 8, 4 7), które nie są wspólne dla tych dwóch obiektów.

SELECT ST_Area( ST_SymDifference(ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))',0),(SELECT buildings.geometria
	FROM buildings
	WHERE buildings.nazwa = 'BuildingC')))


DROP TABLE buildings;
DROP TABLE roads;
DROP TABLE pktinfo;


